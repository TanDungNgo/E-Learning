{"ast":null,"code":"'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n  return isNonNullObject(value) && !isSpecial(value);\n};\n\nfunction isNonNullObject(value) {\n  return !!value && typeof value === 'object';\n}\n\nfunction isSpecial(value) {\n  var stringValue = Object.prototype.toString.call(value);\n  return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);\n} // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\n\n\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n  return value.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nfunction emptyTarget(val) {\n  return Array.isArray(val) ? [] : {};\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n  return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n}\n\nfunction defaultArrayMerge(target, source, options) {\n  return target.concat(source).map(function (element) {\n    return cloneUnlessOtherwiseSpecified(element, options);\n  });\n}\n\nfunction getMergeFunction(key, options) {\n  if (!options.customMerge) {\n    return deepmerge;\n  }\n\n  var customMerge = options.customMerge(key);\n  return typeof customMerge === 'function' ? customMerge : deepmerge;\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n  return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function (symbol) {\n    return target.propertyIsEnumerable(symbol);\n  }) : [];\n}\n\nfunction getKeys(target) {\n  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));\n}\n\nfunction propertyIsOnObject(object, property) {\n  try {\n    return property in object;\n  } catch (_) {\n    return false;\n  }\n} // Protects from prototype poisoning and unexpected merging up the prototype chain.\n\n\nfunction propertyIsUnsafe(target, key) {\n  return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n  && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n  && Object.propertyIsEnumerable.call(target, key)); // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n  var destination = {};\n\n  if (options.isMergeableObject(target)) {\n    getKeys(target).forEach(function (key) {\n      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n    });\n  }\n\n  getKeys(source).forEach(function (key) {\n    if (propertyIsUnsafe(target, key)) {\n      return;\n    }\n\n    if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n      destination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n    } else {\n      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n    }\n  });\n  return destination;\n}\n\nfunction deepmerge(target, source, options) {\n  options = options || {};\n  options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n  options.isMergeableObject = options.isMergeableObject || isMergeableObject; // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n  // implementations can use it. The caller may not replace it.\n\n  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n  var sourceIsArray = Array.isArray(source);\n  var targetIsArray = Array.isArray(target);\n  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n  if (!sourceAndTargetTypesMatch) {\n    return cloneUnlessOtherwiseSpecified(source, options);\n  } else if (sourceIsArray) {\n    return options.arrayMerge(target, source, options);\n  } else {\n    return mergeObject(target, source, options);\n  }\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n  if (!Array.isArray(array)) {\n    throw new Error('first argument should be an array');\n  }\n\n  return array.reduce(function (prev, next) {\n    return deepmerge(prev, next, options);\n  }, {});\n};\n\nvar deepmerge_1 = deepmerge;\nmodule.exports = deepmerge_1;","map":{"version":3,"names":["isMergeableObject","value","isNonNullObject","isSpecial","stringValue","Object","prototype","toString","call","isReactElement","canUseSymbol","Symbol","for","REACT_ELEMENT_TYPE","$$typeof","emptyTarget","val","Array","isArray","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","defaultArrayMerge","target","source","concat","map","element","getMergeFunction","key","customMerge","getEnumerableOwnPropertySymbols","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getKeys","keys","propertyIsOnObject","object","property","_","propertyIsUnsafe","hasOwnProperty","mergeObject","destination","forEach","arrayMerge","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","all","deepmergeAll","array","Error","reduce","prev","next","deepmerge_1","module","exports"],"sources":["C:/Users/Admin/OneDrive/Desktop/Test-api/E-Learning/reactjs/node_modules/deepmerge/dist/cjs.js"],"sourcesContent":["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}